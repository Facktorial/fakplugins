# cmake -DCMAKE_BUILD_TYPE=Debug ..
IF (CMAKE_BUILD_TYPE MATCHES Debug)
	SET(COMMON_FLAGS "-g")
	#SET(SANITIZERS "-fsanitize=address -fsanitize=undefined -fsanitize=leak")
	SET(STATUS_MSG "DEBUG.")
	SET(LIBS_FLAGS "-O2")

	IF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W4")
	ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		SET(WNO_EVERYTHING "-Wno-double-promotion -Wno-unused-lambda-capture -Wno-covered-switch-default -Wno-unused-function -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-implicit-float-conversion -Wno-padded -Wno-unused-private-field -Wno-reserved-identifier -Wno-c++20-compat -Wno-unused-macros")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ferror-limit=7 -Weverything ${WNO_EVERYTHING}")
	ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pedantic -Wall -Wextra")
	ENDIF()
ELSEIF (CMAKE_BUILD_TYPE MATCHES Release)
	SET(COMMON__FLAGS "-O2")
	SET(SANITIZERS "")
	SET(STATUS_MSG "RELEASE.")
	SET(LIBS_FLAGS "-O2")

	IF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W4")
	ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Weverything -Wno-c++98-compat")
	ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pedantic -Wall -Wextra")
	ENDIF()
ELSE()
    SET(COMMON_FLAGS "-g")
	SET(SANITIZERS "-fsanitize=address -fsanitize=undefined -fsanitize=leak")
    SET(STATUS_MSG "DEV.")
ENDIF()

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${COMMON_FLAGS} ${SANITIZERS}")

message(STATUS "BUILD : ${STATUS_MSG}")
message(STATUS "COMPILER: ${CMAKE_CXX_COMPILER}")
message(STATUS "FLAGS: ${CMAKE_CXX_FLAGS}")
message(STATUS "")
